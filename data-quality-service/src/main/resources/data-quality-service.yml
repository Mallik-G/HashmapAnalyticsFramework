spring.application:
    name: data-quality-service
server:
  # Server bind address
  address: "${HTTP_BIND_ADDRESS:0.0.0.0}"
  # Server bind port
  port: "${HTTP_BIND_PORT:8095}"

spring.logging.file: ${LOG_FILE:${spring.application.name}/target}

security:
  oauth2:
    client:
      clientId: "${DATA_QUALITY_CLIENT_ID:data-quality-service}"
      clientSecret: "${DATA_QUALITY_CLIENT_SECRET:password}"
      accessTokenUri: "${ACCESS_TOKEN_URI:${IDENTITY_BASE_URL:http://localhost:9002/uaa}/oauth/token}"
      grant-type: "${DATA_QUALITY_CLIENT_GRANT_TYPE:client_credentials}"
      scope: ["server"]
    resource:
      tokenInfoUri: "${TOKEN_INFO_URI:${IDENTITY_BASE_URL:http://localhost:9002/uaa}/oauth/check_token}"

db:
  file-path: "${DB_FILE_PATH:rox/db}"

tempus:
  uri: "${TEMPUS_URL:http://localhost:8080}"
  mqtt-bind-address: "${TEMPUS_MQTT_BIND_ADDRESS:localhost}"
  mqtt-bind-port: "${TEMPUS_MQTT_BIND_PORT:1883}"
  gateway-access-token: "${TEMPUS_GATEWAY_TOKEN:DEVICE_GATEWAY_TOKEN}"

# Time window for quality check operations
kafka-app:
  time-window: "${TIME_WINDOW:10000}"
  kafka-bind-address: "${KAFKA_BIND_ADDRESS:kafka}"
  kafka-bind-port: "${KAFKA_BIND_PORT:9092}"
  data-quality-topic: "${DATA_QUALITY_TOPIC:data-quality-topic}"

# Frequency mismatch threshold for data quality checking
data-quality-frequency:
  threhold: "${FREQUENCY_QUALITY_THRESHOLD:10}"

# Streams
kinesis:
  enabled: "${KINESIS_SUPPORT_ENABLED:false}"
  stream-name: "${STREAM_NAME:stream-name}"
  shard-id: "${SHARD_ID:shardId}"

aws:
  access-key: "${AWS_ACCESS_KEY:aws_access_key}"
  secret-key: "${AWS_SECRET_KEY:aws_secret_key}"
